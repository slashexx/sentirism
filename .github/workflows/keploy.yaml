name: Keploy Test Runner

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      command:
        description: 'Command to run the application'
        required: true
      working-directory:
        description: 'Working directory'
        required: true
        default: '.'
      delay:
        description: 'Startup delay'
        required: true
        default: '10'
      keploy-path:
        description: 'Path to keploy'
        required: true
        default: './'
      container-name:
        description: 'Container name for docker compose'
        required: false
      build-delay:
        description: 'Docker build delay'
        default: '50s'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        if: contains(inputs.command, 'go')
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Setup Node.js
        if: contains(inputs.command, 'node')
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Java
        if: contains(inputs.command, 'java') || contains(inputs.command, 'mvn')
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Python
        if: contains(inputs.command, 'python')
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Keploy
        shell: bash
        run: |
          curl --silent --location "https://github.com/keploy/keploy/releases/latest/download/keploy_linux_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/keploy /usr/local/bin/keploy
          chmod +x /usr/local/bin/keploy

      - name: Run Tests
        id: keploy-test
        shell: bash
        env:
          COMMAND: ${{ github.event.inputs.command }}
          WORKING_DIR: ${{ github.event.inputs.working-directory }}
          DELAY: ${{ github.event.inputs.delay }}
          KEPLOY_PATH: ${{ github.event.inputs.keploy-path }}
          CONTAINER_NAME: ${{ github.event.inputs.container-name }}
          BUILD_DELAY: ${{ github.event.inputs.build-delay }}
        run: |
          cd "$WORKING_DIR"
          go mod download
          sudo -E keploy test -c "go run main.go" --delay "10" --path "."          
          grep -oE "COMPLETE TESTRUN SUMMARY\.\s+Total tests: [0-9]+" report.txt | sed -r "s/\x1B\[[0-9;]*[mGK]//g" > final_total_tests.out
          grep -oE "COMPLETE TESTRUN SUMMARY\.\s+Total test passed: [0-9]+" report.txt | sed -r "s/\x1B\[[0-9;]*[mGK]//g" > final_total_passed.out
          grep -oE "COMPLETE TESTRUN SUMMARY\.\s+Total test failed: [0-9]+" report.txt | sed -r "s/\x1B\[[0-9;]*[mGK]//g" > final_total_failed.out
          
          echo 'KEPLOY_REPORT<<EOF' >> $GITHUB_OUTPUT
          cat final_total_tests.out final_total_passed.out final_total_failed.out >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Comment PR
        if: success()
        uses: actions/github-script@v6
        env:
          KEPLOY_REPORT: ${{ steps.keploy-test.outputs.KEPLOY_REPORT }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            if (!process.env.KEPLOY_REPORT) {
              throw new Error('KEPLOY_REPORT not found');
            }
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: process.env.KEPLOY_REPORT
            });