name: SBOM and Vulnerability Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  security-scan:
    permissions:
      contents: read
      pull-requests: write
      issues: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1

      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Generate SBOM with Syft
        run: syft . -o cyclonedx-json > sbom.json

      - name: Upload SBOM as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json

      - name: Install Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Generate Vulnerability Report
        id: vuln-report
        run: |
          REPORT=$(grype sbom:sbom.json -o table)
          echo "SCAN_REPORT<<EOF" >> $GITHUB_ENV
          echo "$REPORT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
          CRIT_VULNS=$(grype sbom:sbom.json -o json | jq -r '.matches[] | select(.vulnerability.severity=="Critical") | "- \(.vulnerability.id): \(.vulnerability.description)"')
          if [ ! -z "$CRIT_VULNS" ]; then
            echo "HAS_CRITICAL=true" >> $GITHUB_ENV
            echo "CRITICAL_VULNS<<EOF" >> $GITHUB_ENV
            echo "$CRIT_VULNS" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "HAS_CRITICAL=false" >> $GITHUB_ENV
          fi

      - name: Comment on Pull Request
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const hasCritical = process.env.HAS_CRITICAL === 'true';
            let commentBody = '## Vulnerability Scan Results\n\n';
            
            if (hasCritical) {
              commentBody += '⚠️ **CRITICAL VULNERABILITIES FOUND!**\n\n';
              commentBody += '### Critical Vulnerabilities:\n';
              commentBody += process.env.CRITICAL_VULNS + '\n\n';
            } else {
              commentBody += '✅ No critical vulnerabilities found\n\n';
            }
            
            commentBody += '### Full Scan Report:\n```\n';
            commentBody += process.env.SCAN_REPORT;
            commentBody += '\n```';
            
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });

      - name: Fail on Critical Vulnerabilities
        if: env.HAS_CRITICAL == 'true'
        run: exit 1